Problem Statement -:

You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at 
that position.
Return true if you can reach the last index, or false otherwise.

Example 1:

Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.

Example 2:

Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.

Problem Constraints -:

1 <= nums.length <= 10^4
0 <= nums[i] <= 10^5

Topic Tags -: Array, Dynamic Programming, Greedy

Intuition -:

In this problem we are given an array having number of jumps. We start from 0th index and by taking jumps we have to reach end if possible. We can take 1-arr[i] 
jumps from an index i. We will use dynamic programming to solve this problem. We will every case from 1-arr[i] jump if it is possible to reach end then we will
return true otherwise false.
