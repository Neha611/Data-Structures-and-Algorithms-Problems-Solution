Problem Statement -:

You are given an array prices where prices[i] is the price of a given stock on the ith day.
You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.
Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

Example 1 -:

Input: prices = [7,1,5,3,6,4]
Output: 5
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.

Example 2 -:

Input: prices = [7,6,4,3,1]
Output: 0
Explanation: In this case, no transactions are done and the max profit = 0.

Problem Constraints -:

1 <= prices.length <= 105
0 <= prices[i] <= 104

Topic Tags -: Array, Dynamic Programming

Approach -:

The problem statement says that you can buy a stock on ith day and sell a stock on jth day such j>i. You have do transaction such that your total profit is maximum. Now this problem is of Dynamic Programming 
because you can either select a day for buy/sell or skip a day. Let's see how we will do this.
We will keep track of buying day and will choose a day that has minimum stock price then we will choose a selling day such price of stock on that is day is greater than the price of stock on buying day and our 
maximum profit will prices[sell_day] - prices[buy_day]. We will consider one transaction only as per mentioned in problem statement.

